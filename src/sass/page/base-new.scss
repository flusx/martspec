@import "../atom/base-new-vars";

.ms-base-new {

  // Add-ons

  @each $color, $hex in $bgs-new {
    .bg-#{$color} {
      background: $hex;
    }
  };

  @each $gap, $rem in $section-y-gap {
    .mt-mob-#{$gap} {
      @include media-breakpoint-down($base-breakpoint) {
        margin-top: $rem #{"!important"};
      }
    }
    .mb-mob-#{$gap} {
      @include media-breakpoint-down($base-breakpoint) {
        margin-bottom: $rem #{"!important"};
      }
    }
  };

  .mb-6 {
    margin-bottom: map-get($section-y-gap, "xxs");
  }

  %with-shadow {
    box-shadow:
    0px 4px 8px 0px #0000000A,
    0px 0px 4px 0px #0000000F;
  }

  %p-smaller {
    font-size: 1.35rem;
    line-height: 147%;
    margin-bottom: 0;
  }

  // Reset bootstrap defaults

  h2,
  h3 {
    margin-top: 0;
  }

  ul {
    list-style-type: none;
    padding-left: 0;
  }

  ul,
  li,
  .row,
  *[class^="col-"],
  *[class*=" col-"] {
    margin-bottom: 0;
    padding-bottom: 0;
  }

  // Elements

  h2,
  h3 {
    overflow-wrap: anywhere;
    margin-bottom: 2rem;
  }

  h2 {
    color: $ms-color-text-black;
  }

  h3 {
    font-size: 1.7rem;
    font-family: os5;
    color: $ms-color-text-darker;
    line-height: 159%;
  }

  p,
  li {
    line-height: 152%;
  }

  p {
    color: #595959;
    margin-bottom: map-get($section-y-gap, "xxs");
  }

  img {
    padding-top: 0;
    max-width: 100%;
  }

  section {
    max-width: 100%;
    padding: 0;
    margin: map-get($section-y-gap, "l") auto;

    &.bg-gray {
      padding: map-get($section-y-gap, "m") 0;
    }

    &.bg-merge-top {
      margin-top: -(map-get($section-y-gap, "m"))*2;
    }
  }

  // Classes

  .col-lg-6 {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .ms-btn-large {
    align-self: flex-start;
    color: #FFFFFF;
  }

  .ms-read-more-btn {
    @extend %p-smaller;

    display: inline-block;
    font-family: os4;
    text-decoration: none;
    color: $ms-color-text-black;

    span {
      &::after {
        content: url("/src/img/atom/icons/icon-arrow.svg");
        margin-left: 15px;
        display: inline-block;
      }
    }
  }

  .ms-base-image {
    @include media-breakpoint-down($base-breakpoint) {
      margin: 0;
    }
  }

  .row {
    @extend .ms-s-offset;

    margin-top: 0;

    &.g-4 {
      margin-top: -1.5rem; // necessary for correct offsets
    }

    &:not(:only-child):not(:last-child) {
      margin-bottom: map-get($section-y-gap, "s");
    }
  }

  .block {
    @extend %with-shadow;

    height: 100%;
    padding: 3rem;
    border-radius: 38px;

    h3 {
      margin-bottom: 1rem;
    }

    p,
    li {
      @extend %p-smaller;
    }
  }

  .icon {
    @extend %with-shadow;
    
    $icon-size: 76px;

    flex: 0 0 $icon-size;

    height: $icon-size;
    width: $icon-size;
    border-radius: 18px;

    display: flex;
    justify-content: center;
    align-items: center;

    & > img {
      padding: 0;
      margin: 0;
    }
  }

  .checkmark-list {
    width: 100%;

    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;

    @include media-breakpoint-down(xl) {
      grid-template-columns: 1fr;
    }

    li {
      display: flex;

      &::before {
        content: url("src/img/atom/icons/icon-check.svg");
        margin-top: 4px;
        margin-right: 14px;
      }
    }
  }

  .how-list {
    flex-wrap: wrap;

    li {
      padding: 1rem;
      border-radius: 8px;
    }

    @include media-breakpoint-down(md) {
      li {
        flex-basis: calc(50% - (#{$column-x-gap} / 2));
      }
      li:last-child {
        flex-basis: 100%;
      }
    }
  }

  .list-with-icons {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    column-gap: $column-x-gap;
    row-gap: 2.5rem;

    @include media-breakpoint-down($base-breakpoint) {
      grid-template-columns: 1fr;
    }

    li {
      display: grid;
      grid-template-columns: auto 1fr;
      gap: 1.5rem;
    }

    h3 {
      margin-bottom: 0;
    }

    p {
      @extend %p-smaller;
    }

    &.extended {
      grid-template-columns: repeat(3, 1fr);
      row-gap: 5rem;
  
      li {
        grid-template-columns: 1fr;
        gap: map-get($section-y-gap, "xxs");
      }
  
      h3 {
        margin-bottom: 1rem;
      }

      @include media-breakpoint-down($base-breakpoint) {
        grid-template-columns: repeat(2, 1fr);
      }

      @include media-breakpoint-down(md) {
        grid-template-columns: 1fr;
        row-gap: 1.5rem;

        li {
          padding: 3rem;
          border-radius: 38px;
          background: #F8F8F8;
        }

        .icon {
          order: 3;
        }
      }
    }
  }

  .page-bottom {
    .block {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      column-gap: $column-x-gap;

      @include media-breakpoint-down($base-breakpoint) {
        grid-template-columns: 1fr;
        row-gap: 3rem;
      }
    }
  }

  // Ensure bootstrap class apply in case of same specifity

  .g-4 {
    @extend .g-4;
  }
}